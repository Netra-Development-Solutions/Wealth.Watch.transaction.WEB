pipeline {
    agent any
    
    environment {
        aws_credential = 'AWS_S3_CRED'
        repo_url = "https://github.com/Netra-Development-Solutions/Wealth.Watch.transaction.WEB"
        bucket = "test-blob"
        region = "ap-south-1"
        plugin_name = "wealth.watch.transaction.react"
    }
    
    stages {
        stage("Manual approval") {
            steps {
                script {
                    def packageJsonContents = readFile("${plugin_name}/package.json")
                    def packageJson = readJSON text: packageJsonContents
                    
                    def packageName = packageJson.name
                    def packageVersion = packageJson.version
                    
                    // Deploy to "name/version" path in S3
                    def deployPath = "${packageName}/${packageVersion}"
                    
                    // Display extracted information
                    echo "Package Name: ${packageName}"
                    echo "Package Version: ${packageVersion}"
                    
                    // Manual approval step
                    input(message: "Proceed with deploying to ${deployPath}?", ok: "Deploy")
                }
            }
        }
        
        stage("Cloning GitHub Repo") {
            steps {
                echo "Cloning code from GitHub"
                git branch: 'PIPELINE_TEST', url: "${repo_url}"
            }
        }
        
        stage("Install npm packages") {
            steps {
                dir("${plugin_name}") {
                    echo "Installing npm dependencies"
                    bat "npm install"
                }
            }
        }
        
        stage("Run Tests") {
            steps {
                echo "Running tests"
                // bat "npm test"
            }
        }
        
        stage("Building plugin") {
            steps {
                dir("${plugin_name}") {
                    echo "Building plugin"
                    bat "npm run build"
                }
            }
        }
        
        stage("Upload to AWS S3") {
            steps {
                script {
                    def packageJsonContents = readFile("${plugin_name}/package.json")
                    def packageJson = readJSON text: packageJsonContents
                    
                    def packageName = packageJson.name
                    def packageVersion = packageJson.version
                    
                    // Deploy to "name/version" path in S3
                    def deployPath = "${packageName}/${packageVersion}"
                    
                    // Display extracted information
                    echo "Package Name: ${packageName}"
                    echo "Package Version: ${packageVersion}"
                    
                    withAWS(region: "${region}", credentials: "${aws_credential}") {
                        s3Upload(bucket: "${bucket}", path: "plugins/${deployPath}/", includePathPattern: '**/*', workingDir: "${plugin_name}/dist")
                    }
                }
            }
        }
    }
}
